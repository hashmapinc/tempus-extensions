<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.hashmapinc.tempus</groupId>
		<artifactId>extensions</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>kudu-store</artifactId>
	<packaging>jar</packaging>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
	</profiles>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<encoding>UTF-8</encoding>
		<scala.version>2.11.8</scala.version>
		<scala.compat.version>2.11</scala.compat.version>
		<paho.client.version>1.1.0</paho.client.version>
	</properties>
   
	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>com.googlecode.addjars-maven-plugin</groupId>
				<artifactId>addjars-maven-plugin</artifactId>
				<version>1.0.5</version>
				<executions>
					<execution>
						<goals>
							<goal>add-jars</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>${basedir}/lib</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- see http://davidb.github.com/scala-maven-plugin -->
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
						<configuration>
							<args>
								<!--arg>-make:transitive</arg-->
								<arg>-dependencyfile</arg>
								<arg>${project.build.directory}/.scala_dependencies</arg>
							</args>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<useFile>false</useFile>
					<disableXmlReport>true</disableXmlReport>
					<!-- If you have classpath issue like NoDefClassError,... -->
					<useManifestOnlyJar>false</useManifestOnlyJar>
					<includes>
						<include>**/*Test.*</include>
						<include>**/*Suite.*</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<finalName>uber-${project.artifactId}-${project.version}</finalName>
					<artifactSet>
						<excludes>
							<exclude>junit:junit</exclude>
							<exclude>org.apache.spark:spark-core_${scala.compat.version}</exclude>
							<exclude>org.apache.spark:spark-streaming_${scala.compat.version}</exclude>
						</excludes>
					</artifactSet>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
								<!--
								<exclude>com/google/common/**</exclude>
								-->
							</excludes>
						</filter>
					</filters>
				</configuration>
			</plugin>
		</plugins>

		<resources>
		    <resource>
		        <directory>src/main/resources</directory>
		        <filtering>true</filtering>
		    </resource>
		    <resource>
		        <directory>conf</directory>
		    </resource>
		    <resource>
		        <directory>${basedir}/public</directory>
		        <targetPath>public</targetPath>
		    </resource>
		</resources>
	</build>


	<repositories>
		<repository>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
			<id>HDPReleases</id>
			<name>HDP Releases</name>
			<url>http://repo.hortonworks.com/content/repositories/releases/</url>
			<layout>default</layout>
		</repository>
		<repository>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
			<id>HDPPublic</id>
			<name>HDP Public</name>
			<url>  http://repo.hortonworks.com/content/groups/public/</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>ClouderaReleases</id>
			<name>Cloudera Releases</name>
			<url>https://repository.cloudera.com/content/repositories/releases/</url>
		</repository>
		<repository>
			<id>cdh.repo</id>
			<name>Cloudera Repositories</name>
			<url>https://repository.cloudera.com/artifactory/cloudera-repos</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_2.11</artifactId>
			<version>3.0.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_${scala.compat.version}</artifactId>
			<version>2.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_${scala.compat.version}</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming_${scala.compat.version}</artifactId>
			<version>2.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib_${scala.compat.version}</artifactId>
			<version>2.2.0</version>
		</dependency> 
		<dependency>
			<groupId>org.eclipse.paho</groupId>
			<artifactId>org.eclipse.paho.client.mqttv3</artifactId>
			<version>${paho.client.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql-kafka-0-10_${scala.compat.version}</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming-kafka-0-10_${scala.compat.version}</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>com.cloudera.sparkts</groupId>
			<artifactId>sparkts</artifactId>
			<version>0.4.1</version>
		</dependency>
		<dependency>
			<groupId>org.scalanlp</groupId>
			<artifactId>breeze_${scala.compat.version}</artifactId>
			<version>0.13.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.kudu</groupId>
			<artifactId>kudu-client</artifactId>
			<version>1.4.0-cdh5.12.1</version>
		</dependency>

        <dependency>
            <groupId>org.apache.kudu</groupId>
            <artifactId>kudu-spark-tools</artifactId>
            <version>1.4.0-cdh5.12.1</version>
        </dependency>
	</dependencies>

</project>
